{"version":3,"file":"vue-tree.min.js","sources":["../src/components/tree.vue"],"sourcesContent":["<template>\n    <transition name='fade'>\n    <ul class=\"tree\" v-show=\"visible\">\n        <li class=\"treenode\" v-for=\"(item,i) in options\">\n            <img src=\"./up_two.png\" @click=\"iconClick($event)\" :class=\"nodes[i].extend ? 'expand' :''\"/>\n            <slot name=\"renderContent\" :item=\"item\" :options=\"options\" >\n            </slot>\n            <template v-if=\"item.child\">\n                <vueTree :options=\"item.child\">\n                    <img src=\"./up_two.png\" @click=\"iconClick($event)\"/>\n                    <template class=\"node-content\" slot=\"renderContent\" slot-scope=\"props\">\n                        <slot name=\"renderContent\" :item=\"props.item\" :options=\"props.options\"></slot>\n                    </template>\n                </vueTree>\n            </template>\n        </li>\n    </ul>\n    </transition>\n</template>\n\n<script>\n    export default {\n        name: 'vueTree',\n        props: {\n            options: Array\n        },\n        components:{\n        },\n        data () {\n            return {\n                visible: true,\n                nodes: []\n            }\n        },\n        created () {\n            this.extendNodeValue(this.options)\n        },\n        mounted () {\n\n        },\n        watch: {\n            options (value) {\n                this.extendNodeValue(value)\n            }\n        },\n        methods: {\n            iconClick(event){\n                var children = this.$children;\n                for(var i = 0;i < children.length; i++){\n                    if(children[i].$el.parentElement.contains(event.target)){\n                        children[i].visible = children[i].visible ? false: true;\n                        this.nodes[i].extend = children[i].visible;\n                    }\n                }\n            },\n            extendNodeValue(options){\n                for(var i = 0; i < options.length; i++){\n                    this.nodes.push({data: options[i],extend: true})\n                }\n            }\n        }\n    }\n</script>\n<style scoped>\n    ul,li{\n        list-style: none;\n        margin: 0;\n        padding: 0;\n    }\n    .tree{\n        overflow: hidden;\n    }\n    .treenode{\n        padding-left: 30px;\n        line-height: 36px;\n    }\n    .node-content{\n        display: inline-block;\n    }\n    img{\n        float: left;\n        padding: 8px;\n        margin-right: 8px;\n    }\n    .fade-enter-active,.fade-leave-active{\n        transition:height 5s ease;\n    }\n    .fade-enter,.fade-leave-active{\n        height: 0;\n        padding-bottom: 0;\n    }\n    .expand{\n        transform: rotate(90deg);\n    }\n</style>\n"],"names":["render","name","props","options","Array","components","data","visible","nodes","created","this","extendNodeValue","mounted","watch","value","methods","iconClick","event","children","$children","i","length","$el","parentElement","contains","target","extend","push"],"mappings":"cAAA,w2BAAA,GAqBA,UAAgBA,sxBACZC,KAAM,UACNC,OACIC,QAASC,OAEbC,cAEAC,gBACI,OACIC,SAAS,EACTC,WAGRC,mBACIC,KAAKC,gBAAgBD,KAAKP,UAE9BS,qBAGAC,OACIV,iBAASW,GACLJ,KAAKC,gBAAgBG,KAG7BC,SACIC,mBAAUC,GAEN,IAAI,IADAC,EAAWR,KAAKS,UACZC,EAAI,EAAEA,EAAIF,EAASG,OAAQD,IAC5BF,EAASE,GAAGE,IAAIC,cAAcC,SAASP,EAAMQ,UAC5CP,EAASE,GAAGb,SAAUW,EAASE,GAAGb,aAC7BC,MAAMY,GAAGM,OAASR,EAASE,GAAGb,UAI/CI,yBAAgBR,GACZ,IAAI,IAAIiB,EAAI,EAAGA,EAAIjB,EAAQkB,OAAQD,SAC1BZ,MAAMmB,MAAMrB,KAAMH,EAAQiB,GAAGM,QAAQ"}